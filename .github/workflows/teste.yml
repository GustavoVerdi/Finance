name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 1'

jobs:
  lint:
    name: Verificar Código
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositório
        uses: actions/checkout@v3
      
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Instalar ESLint e Prettier
        run: npm install -g eslint prettier
      
      - name: Verificar JavaScript
        run: eslint scripts.js || true
      
      - name: Verificar PHP
        run: |
          sudo apt-get install php-cli
          php -l cadastro.php || true
          php -l login.php || true

  security:
    name: Verificar Segurança
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositório
        uses: actions/checkout@v3
      
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Rodar análise de segurança no Node.js
        run: |
          npm audit --audit-level=moderate || true

      - name: Verificar segurança no PHP
        run: |
          sudo apt-get install php-cli
          php -m | grep openssl || echo "OpenSSL não encontrado"

  format:
    name: Aplicar Formatação
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositório
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Instalar dependências
        run: npm install

      - name: Rodar Prettier e ESLint
        run: |
          npx eslint --fix scripts.js
          npx prettier --write "**/*.{js,css,html}"

      - name: Commit das mudanças
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Formatação automática" || echo "Nenhuma alteração necessária"
          git push

  optimize_images:
    name: Otimizar Imagens
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositório
        uses: actions/checkout@v3

      - name: Instalar otimizadores de imagem
        run: |
          sudo apt-get install -y jpegoptim optipng

      - name: Reduzir tamanho das imagens
        run: |
          find . -name "*.jpg" -o -name "*.jpeg" | xargs jpegoptim --max=80
          find . -name "*.png" | xargs optipng -o7

      - name: Commit das imagens otimizadas
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Otimização automática de imagens" || echo "Nenhuma alteração necessária"
          git push

  lighthouse:
    name: Análise de Performance
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositório
        uses: actions/checkout@v3

      - name: Instalar Lighthouse CLI
        run: npm install -g lighthouse

      - name: Rodar Lighthouse no site
        run: |
          lighthouse http://gustavoverdi.github.io/Finance/ --output=json --output-path=./report.json --quiet --chrome-flags="--headless"

      - name: Armazenar relatório como artefato
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: ./report.json

  deploy:
    name: Deploy no GitHub Pages
    needs: [lint, security, format, optimize_images]
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositório
        uses: actions/checkout@v3
      
      - name: Configurar GitHub Pages
        uses: actions/configure-pages@v2
      
      - name: Fazer deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: .

  notify:
    name: Notificações no Discord
    if: always()
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Enviar alerta para Discord
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: "Status do Deploy: ${{ job.status }} no repositório **${{ github.repository }}**"
